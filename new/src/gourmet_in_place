#!/usr/bin/python
# Copyright (c) 2004, 2005, 2006, 2007 Tom Hinkle
# You may use and distribute this software under the terms of the
# GNU General Public License, version 2 or later

#import sys
#import signal
#signal.signal(signal.SIGINT, signal.SIG_DFL)
import sys, os, os.path
if os.path.exists('foo'):
    os.remove('foo/gourmet')
    os.rmdir('foo')

os.mkdir('foo')
os.symlink(os.path.abspath('lib'),'foo/gourmet')
sys.path = [os.path.abspath('foo')] + sys.path
sys.argv.append('--gourmet-directory=%s'%os.path.abspath('../data/glade/'))
sys.argv.append('--data-directory=%s'%os.path.abspath('../data/'))
print sys.path

from gourmet.options import *

def thread_debug ():
    print 'THREADING DEBUG INFO: ',threading.enumerate()
    t=threading.Timer(options.thread_debug_interval,thread_debug)
    print '(starting timer: ',t,')'
    t.terminate = lambda *args: t.cancel()
    t.start()
    

if options.thread_debug:
    import threading
    thread_debug()
elif options.psyco:
    try:
        import psyco
        psyco.full()
    except ImportError:
        # ignore
        pass

import gourmet.GourmetRecipeManager
import tempfile, os.path
import hotshot, hotshot.stats
#profi = os.path.join(tempfile.tempdir,'GOURMET_PROFILE')
prof = hotshot.Profile(os.path.join(tempfile.tempdir,'GOURMET_HOTSHOT_PROFILE'))
prof.runcall(gourmet.GourmetRecipeManager.startGUI)
stats = hotshot.stats.load(os.path.join(tempfile.tempdir,'GOURMET_HOTSHOT_PROFILE'))
stats.strip_dirs()
stats.sort_stats('time','calls').print_stats()
#stats.print_stats(40)
#for mod in sys.modules:
    #print mod,sys.modules[mod]
